{"version":3,"file":"ngx-gapi-auth2.js","sources":["../../src/lib/config/google-api.config.ts","../../src/lib/models/auth.ts","../../src/lib/services/google-api-loader.service.ts","../../src/lib/services/google-auth2-loader.service.ts","../../src/lib/services/google-auth.service.ts","../../src/lib/common-util-google-oauth.module.ts","../../src/ngx-gapi-auth2.ts"],"sourcesContent":["export interface NgGapiClientConfig {\n\n  /**\n   * User for mocking auth flow to local storage save\n   */\n  e2e: boolean;\n\n  /**\n   * The app's client ID, found and created in the Google Developers Console.\n   */\n  client_id: string;\n\n  /**\n   * The domains for which to create sign-in cookies. Either a URI, single_host_origin, or none.\n   * Defaults to single_host_origin if unspecified.\n   */\n  cookie_policy?: string;\n\n  /**\n   * The scopes to request, as a space-delimited string. Optional if fetch_basic_profile is not set to false.\n   */\n  scope?: string;\n\n  /**\n   * Fetch users' basic profile information when they sign in. Adds 'profile' and 'email' to the requested scopes. True if unspecified.\n   */\n  fetch_basic_profile?: boolean;\n\n  /**\n   * The Google Apps domain to which users must belong to sign in. This is susceptible to modification by clients,\n   * so be sure to verify the hosted domain property of the returned user. Use GoogleUser.getHostedDomain() on the client,\n   * and the hd claim in the ID Token on the server to verify the domain is what you expected.\n   */\n  hosted_domain?: string;\n\n  /**\n   * The UX mode to use for the sign-in flow.\n   * By default, it will open the consent flow in a popup.\n   */\n  ux_mode?: 'popup' | 'redirect';\n\n  /**\n   * If using ux_mode='redirect', this parameter allows you to override the default redirect_uri that will be used at the end of the consent flow.\n   * The default redirect_uri is the current URL stripped of query parameters and hash fragment.\n   */\n  redirect_uri?: string;\n}\n\nexport class GoogleApiConfig {\n  protected clientConfig: NgGapiClientConfig;\n  protected mocked: boolean;\n\n  constructor(config: NgGapiClientConfig) {\n    this.clientConfig = config;\n    this.mocked = config.e2e;\n  }\n\n  public getMocked(): boolean {\n    return this.mocked;\n  }\n\n  public getClientConfig(): NgGapiClientConfig {\n    return this.clientConfig;\n  }\n}\n","export class AuthData {\n  constructor(\n    public id: string,\n    public firstName: string,\n    public lastName: string,\n    public email: string,\n    public avatar: string,\n    public idToken: string,\n    public tokenExpiresAt: number\n  ) { }\n}\n\nexport interface SignInError {\n  type: 'cookiesNotEnabled' | string;\n}\n\nexport interface TokenError {\n  idpId: 'google' | string;\n  type: 'tokenFailed' | 'userLoggedOut' | 'noSessionBound' | string;\n  error?: string;\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { GoogleApiConfig, NgGapiClientConfig } from '../config/google-api.config';\n\nexport let NG_GAPI_CONFIG: InjectionToken<NgGapiClientConfig> =\n  new InjectionToken<NgGapiClientConfig>('ng-gapi.config');\n\n@Injectable()\nexport class GoogleApiLoaderService {\n  private readonly gapiUrl: string = 'https://apis.google.com/js/platform.js';\n  private readonly config: GoogleApiConfig;\n\n  constructor(@Inject(NG_GAPI_CONFIG) config: NgGapiClientConfig) {\n    this.config = new GoogleApiConfig(config);\n    this.loadGapi().subscribe();\n  }\n\n  public onLoad(): Observable<boolean> {\n    return this.loadGapi();\n  }\n\n  public getConfig(): GoogleApiConfig {\n    return this.config;\n  }\n\n  public isMocked(): boolean {\n    return this.config.getMocked();\n  }\n\n  private loadGapi(): Observable<boolean> {\n    return new Observable((observer: Observer<boolean>) => {\n      const node = document.createElement('script');\n      node.src = this.gapiUrl;\n      node.type = 'text/javascript';\n      document.getElementsByTagName('head')[0].appendChild(node);\n      node.onload = () => {\n        observer.next(true);\n        observer.complete();\n      };\n    });\n  }\n}\n","/// <reference types=\"gapi.auth2\" />\nimport { Injectable } from '@angular/core';\nimport { Observable, Observer, of } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport GoogleAuth = gapi.auth2.GoogleAuth;\nimport { GoogleApiLoaderService } from './google-api-loader.service';\n\n\n@Injectable()\nexport class GoogleAuth2LoaderService {\n  private GoogleAuth: GoogleAuth = undefined;\n\n  constructor(private googleApi: GoogleApiLoaderService) {\n    this.googleApi.onLoad().subscribe(() => {\n      this.loadGoogleAuth2().subscribe();\n    });\n  }\n\n  public getAuth(newInstance = false): Observable<GoogleAuth> {\n    if (!this.GoogleAuth || newInstance) {\n      return this.googleApi.onLoad()\n        .pipe(mergeMap(() => this.loadGoogleAuth2()));\n    }\n    return of(this.GoogleAuth);\n  }\n\n  private loadGoogleAuth2(): Observable<GoogleAuth> {\n    return new Observable((observer: Observer<GoogleAuth>) => {\n      gapi.load('auth2', () => {\n        gapi.auth2.init(this.googleApi.getConfig().getClientConfig()).then((auth: GoogleAuth) => {\n          this.GoogleAuth = auth;\n          observer.next(auth);\n          observer.complete();\n        }).catch((err: any) => observer.error(err));\n      });\n    });\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { interval, Observable, ReplaySubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n\nimport { GoogleAuth2LoaderService } from './google-auth2-loader.service';\nimport { GoogleApiLoaderService } from './google-api-loader.service';\nimport { AuthData, SignInError } from '../models/auth';\n\n@Injectable()\nexport class GoogleAuthService {\n  private _authState: ReplaySubject<AuthData> = new ReplaySubject(1);\n  private _loginState: ReplaySubject<AuthData | SignInError> = new ReplaySubject(1);\n  private auth: gapi.auth2.GoogleAuth;\n\n  private readonly SIGN_IN_EXPIRE_KEY = 'loginExpirationDate';\n\n  get authState(): Observable<AuthData> {\n    return this._authState.asObservable();\n  }\n\n  get loginState(): Observable<AuthData | SignInError> {\n    return this._loginState.asObservable();\n  }\n\n  constructor(\n    private googleAuth2LoaderService: GoogleAuth2LoaderService,\n    private googleApiLoaderService: GoogleApiLoaderService,\n    private ngZone: NgZone\n  ) {\n    if (this.googleApiLoaderService.isMocked()) {\n      this.signIn();\n    } else {\n      this.googleApiLoaderService.onLoad().subscribe(() => {\n        this.googleAuth2LoaderService.getAuth().subscribe(\n          auth => this.authLoaded(auth),\n          () => this.removeState()\n        );\n        interval(20 * 60 * 1000).pipe(  // run every 20min\n          tap(() => this.refreshToken())\n        ).subscribe();\n      });\n    }\n  }\n\n  public signIn(): void {\n    if (this.googleApiLoaderService.isMocked()) {\n      this._loginState.next(JSON.parse(localStorage.getItem('user')));\n      this._authState.next(JSON.parse(localStorage.getItem('user')));\n    } else {\n      const now = new Date();\n      const expirationDate = this.setTime(now, null, now.getMinutes() + 5);\n      localStorage.setItem(this.SIGN_IN_EXPIRE_KEY, expirationDate.toISOString());\n      const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n      this.auth.signIn({\n        prompt: 'select_account',\n        ux_mode: isSafari ? 'popup' : 'redirect',\n      }).then(() => this.fetchLoginData());\n    }\n  }\n\n  public signOut(): void {\n    if (!this.googleApiLoaderService.isMocked()) {\n      this.auth.signOut();\n    }\n    this.removeState();\n  }\n\n  public fetchLoginData(): Promise<void> {\n    return this.auth.currentUser.get().reloadAuthResponse().then(r => {\n      this.ngZone.run(() => {\n        this._loginState.next(this.getProfile(r.id_token, r.expires_at));\n        this._authState.next(this.getProfile(r.id_token, r.expires_at));\n      });\n    });\n  }\n\n  public refreshToken(): Promise<void> {\n    return this.auth.currentUser.get().reloadAuthResponse().then(r => {\n      this.ngZone.run(() => this._authState.next(this.getProfile(r.id_token, r.expires_at)));\n    });\n  }\n\n  private authLoaded(auth: gapi.auth2.GoogleAuth): void {\n    this.auth = auth;\n    if (this.auth.currentUser.get().isSignedIn()) {\n      this.fetchLoginData();\n      localStorage.removeItem(this.SIGN_IN_EXPIRE_KEY);\n    } else {\n      const signInDateExpireDate = new Date(localStorage.getItem(this.SIGN_IN_EXPIRE_KEY));\n      if (signInDateExpireDate > new Date()) {\n        this._loginState.next({ type: 'cookiesNotEnabled' });\n        this._authState.next(null);\n      } else {\n        this.removeState();\n      }\n    }\n  }\n\n  private removeState(): void {\n    this._authState.next(null);\n    this._loginState.next(null);\n  }\n\n  private getProfile(token: string, expiresAt: number): AuthData {\n    const p = this.auth.currentUser.get().getBasicProfile();\n    return p ? {\n      id: p.getId(),\n      email: p.getEmail(),\n      firstName: p.getGivenName(),\n      lastName: p.getFamilyName(),\n      avatar: p.getImageUrl(),\n      idToken: token,\n      tokenExpiresAt: expiresAt,\n    } : null;\n  }\n\n  private setTime(date: string | Date, hours?: number, minutes?: number, seconds?: number, milliseconds?: number): Date {\n    const newDate = new Date(date);\n    if (typeof hours === 'number') {\n      newDate.setHours(hours);\n    }\n    if (typeof minutes === 'number') {\n      newDate.setMinutes(minutes);\n    }\n    if (typeof seconds === 'number') {\n      newDate.setSeconds(seconds);\n    }\n    if (typeof milliseconds === 'number') {\n      newDate.setMilliseconds(milliseconds);\n    }\n    return newDate;\n  }\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoogleApiLoaderService } from './services/google-api-loader.service';\nimport { GoogleAuth2LoaderService } from './services/google-auth2-loader.service';\nimport { GoogleAuthService } from './services/google-auth.service';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class GoogleOauthModule {\n  static forRoot(gapiConfigProvider: Provider): ModuleWithProviders<GoogleOauthModule> {\n    return {\n      ngModule: GoogleOauthModule,\n      providers: [\n        gapiConfigProvider,\n        GoogleApiLoaderService,\n        GoogleAuth2LoaderService,\n        GoogleAuthService\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}